// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// updatewCpp
void updatewCpp(arma::mat& W, const arma::mat& P, const int& Q, const arma::mat& XtX, const arma::vec& nzeroes, const double& a);
RcppExport SEXP _CCregPCA_updatewCpp(SEXP WSEXP, SEXP PSEXP, SEXP QSEXP, SEXP XtXSEXP, SEXP nzeroesSEXP, SEXP aSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type W(WSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type P(PSEXP);
    Rcpp::traits::input_parameter< const int& >::type Q(QSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type XtX(XtXSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type nzeroes(nzeroesSEXP);
    Rcpp::traits::input_parameter< const double& >::type a(aSEXP);
    updatewCpp(W, P, Q, XtX, nzeroes, a);
    return R_NilValue;
END_RCPP
}
// pcaccregCpp
Rcpp::List pcaccregCpp(const arma::mat& X, const int& Q, const arma::vec& nzeroes, const int& itr, arma::mat Wstart, int nStarts, double tol, bool printLoss);
RcppExport SEXP _CCregPCA_pcaccregCpp(SEXP XSEXP, SEXP QSEXP, SEXP nzeroesSEXP, SEXP itrSEXP, SEXP WstartSEXP, SEXP nStartsSEXP, SEXP tolSEXP, SEXP printLossSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const int& >::type Q(QSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type nzeroes(nzeroesSEXP);
    Rcpp::traits::input_parameter< const int& >::type itr(itrSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Wstart(WstartSEXP);
    Rcpp::traits::input_parameter< int >::type nStarts(nStartsSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< bool >::type printLoss(printLossSEXP);
    rcpp_result_gen = Rcpp::wrap(pcaccregCpp(X, Q, nzeroes, itr, Wstart, nStarts, tol, printLoss));
    return rcpp_result_gen;
END_RCPP
}
// rcpparma_hello_world
arma::mat rcpparma_hello_world();
RcppExport SEXP _CCregPCA_rcpparma_hello_world() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(rcpparma_hello_world());
    return rcpp_result_gen;
END_RCPP
}
// rcpparma_outerproduct
arma::mat rcpparma_outerproduct(const arma::colvec& x);
RcppExport SEXP _CCregPCA_rcpparma_outerproduct(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::colvec& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpparma_outerproduct(x));
    return rcpp_result_gen;
END_RCPP
}
// rcpparma_innerproduct
double rcpparma_innerproduct(const arma::colvec& x);
RcppExport SEXP _CCregPCA_rcpparma_innerproduct(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::colvec& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpparma_innerproduct(x));
    return rcpp_result_gen;
END_RCPP
}
// rcpparma_bothproducts
Rcpp::List rcpparma_bothproducts(const arma::colvec& x);
RcppExport SEXP _CCregPCA_rcpparma_bothproducts(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::colvec& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpparma_bothproducts(x));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_CCregPCA_updatewCpp", (DL_FUNC) &_CCregPCA_updatewCpp, 6},
    {"_CCregPCA_pcaccregCpp", (DL_FUNC) &_CCregPCA_pcaccregCpp, 8},
    {"_CCregPCA_rcpparma_hello_world", (DL_FUNC) &_CCregPCA_rcpparma_hello_world, 0},
    {"_CCregPCA_rcpparma_outerproduct", (DL_FUNC) &_CCregPCA_rcpparma_outerproduct, 1},
    {"_CCregPCA_rcpparma_innerproduct", (DL_FUNC) &_CCregPCA_rcpparma_innerproduct, 1},
    {"_CCregPCA_rcpparma_bothproducts", (DL_FUNC) &_CCregPCA_rcpparma_bothproducts, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_CCregPCA(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
